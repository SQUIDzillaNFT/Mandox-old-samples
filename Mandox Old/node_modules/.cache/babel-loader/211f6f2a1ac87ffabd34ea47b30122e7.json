{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nrwis\\\\Desktop\\\\mandox-nft-main\\\\src\\\\Component\\\\PrivateRoute\\\\index.js\";\nimport React from \"react\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  rest\n}) => {\n  let authUser = JSON.parse(localStorage.getItem('authUser'));\n  return authUser ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 33\n  }, this); // return (\n  //   <Route\n  //     render={(props) =>\n  //       authUser ? (\n  //         <Component {...props} />\n  //       ) : (\n  //         <Navigate to=\"/login\" />\n  //       )\n  //\n  //     }\n  //     {...rest}\n  //   />\n  // );\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/nrwis/Desktop/mandox-nft-main/src/Component/PrivateRoute/index.js"],"names":["React","Navigate","Outlet","PrivateRoute","component","Component","rest","authUser","JSON","parse","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,kBAA/B;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAmC;AACtD,MAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAf;AACA,SAAOJ,QAAQ,gBAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAF,gBAAe,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAA9B,CAFsD,CAGtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAhBD;;KAAMJ,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport {Navigate, Outlet} from \"react-router-dom\";\nconst PrivateRoute = ({ component: Component, rest}) => {\n  let authUser = JSON.parse(localStorage.getItem('authUser'));\n  return authUser? <Outlet /> : <Navigate to=\"/login\" />\n  // return (\n  //   <Route\n  //     render={(props) =>\n  //       authUser ? (\n  //         <Component {...props} />\n  //       ) : (\n  //         <Navigate to=\"/login\" />\n  //       )\n  //\n  //     }\n  //     {...rest}\n  //   />\n  // );\n};\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}